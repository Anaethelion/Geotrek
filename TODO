==============
In this sprint
==============

* Reset migrations
* Bug admin script name
* Bug supervisord not starting at boot (crontab @reboot ignored)

* Check all stories are in func tests
* Clic everywhere !

* Improve pylint score http://geobi.makina-corpus.net/ecrins-sentiers-ci/job/ecrins-sentiers-tests/violations/

* Use AutoField (serial) for code fields
* Remove db_column for translated fields

* Add command make release (git archive)

* Improve cobertura score ? http://geobi.makina-corpus.net/ecrins-sentiers-ci/job/ecrins-sentiers-tests/152/cobertura/?
* reset IG scores
* grep TODO
* Why initial SQL is loaded twice during syncdb?
* Check vocabulary in abstracts doc and in code (ex. trekking~comm, challenge~stake)

==========
Soon...
==========

* Each URL status (200, 302,...) in tests
* Check form non field error

* Switch to django-bootstrapped instead of embedding it
* Use django-tabs
* Add models test in django-geojson
* Release django-geojson

* List TODO in Hudson
* Generate project docs with Sphinx


==========
One day...
==========

* Docstrings for each model
* Help text for each model field
* Test cache (locmem + files + expires)
* Fix bug db_column in django-modeltranslation https://code.google.com/p/django-modeltranslation/issues/detail?id=83
* Improve installation of GDAL
* Clean-up buildout directory (all in one "env")
* Fields computed at DB-level should be read-only for Django. (Standard
  models.Model.save() method will insert/update all non-PK fields).
* See how django manage an instance being a parent of two different child
  instance in the case of multi-table inheritance. Could it be troublesome?

* Idea ? Process .sql files with template engine. Provide small tags 
  like {% tablename Path %} {% fieldname Path.geom %}.
  This would prevent from having hard-coded tablenames.
